{"version":3,"sources":["components/TaskInput.module.css","components/TaskItem.module.css","components/TaskList.module.css","components/UI/Button.module.css","components/TaskItem.js","components/TaskList.js","components/UI/Button.js","components/TaskInput.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","TaskItem","props","className","classes","taskItem","onClick","onDelete","id","children","TaskList","taskList","items","map","task","text","Button","type","button","TaskInput","useState","enteredValue","setEnteredValue","isValid","setIsValid","onSubmit","event","preventDefault","trim","length","onAdd","value","onChange","target","App","setTaskList","content","targetId","prevTaskList","filter","enteredText","updatedTaskList","unshift","Math","random","toString","substr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,eAAe,gCAAgC,QAAU,6B,iBCA3ED,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,wKCgBZC,EAdE,SAACC,GAKhB,OACE,cAAC,WAAD,UACE,oBAAIC,UAAWC,IAAQC,SAAUC,QANf,WACpBJ,EAAMK,SAASL,EAAMM,KAKnB,SACGN,EAAMO,c,gBCOAC,EAdE,SAACR,GAChB,OACE,cAAC,WAAD,UACE,oBAAIC,UAAWC,IAAQO,SAAvB,SACGT,EAAMU,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAwBN,GAAIM,EAAKN,GAAID,SAAUL,EAAMK,SAArD,SACGO,EAAKC,MADOD,EAAKN,Y,iCCOfQ,EAZA,SAACd,GACd,OACE,wBACEe,KAAMf,EAAMe,KACZd,UAAWC,IAAQc,OACnBZ,QAASJ,EAAMI,QAHjB,SAKGJ,EAAMO,YCgCEU,EAtCG,SAACjB,GACjB,MAAwCkB,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OACE,cAAC,WAAD,UACE,uBAAMC,SAZgB,SAACC,GACzBA,EAAMC,iBAC6B,IAA/BN,EAAaO,OAAOC,QAIxB3B,EAAM4B,MAAMT,GACZC,EAAgB,KAJdE,GAAW,IASX,UACE,sBACErB,UAAS,UAAKC,IAAQ,gBAAb,aACNmB,GAAWnB,IAAO,SAFvB,UAKE,yCACA,uBAAOa,KAAK,OAAOc,MAAOV,EAAcW,SA1BvB,SAACN,GACpBA,EAAMO,OAAOF,MAAMH,OAAOC,OAAS,GACrCL,GAAW,GAEbF,EAAgBI,EAAMO,OAAOF,aAwBzB,cAAC,EAAD,CAAQd,KAAK,SAAb,4BCYOiB,MA5Cf,WAEE,MAAgCd,mBAAS,CACvC,CAAEZ,GAAI,KAAMO,KAAM,YAClB,CAAEP,GAAI,KAAMO,KAAM,gBAFpB,mBAAOJ,EAAP,KAAiBwB,EAAjB,KA0BIC,EAAU,gDAMd,OAJIzB,EAASkB,OAAS,IACpBO,EAAU,cAAC,EAAD,CAAUxB,MAAOD,EAAUJ,SAbb,SAAC8B,GACzBF,GAAY,SAACG,GAIX,OAHwBA,EAAaC,QACnC,SAACzB,GAAD,OAAUA,EAAKN,KAAO6B,YAc1B,eAAC,WAAD,WACE,yBAAS7B,GAAG,eAAZ,SACE,cAAC,EAAD,CAAWsB,MA9BM,SAACU,GACtBL,GAAY,SAACG,GACX,IAAMG,EAAe,YAAOH,GAK5B,OAJAG,EAAgBC,QAAQ,CACtBlC,GAAImC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GACzC/B,KAAMyB,IAEDC,UAyBP,yBAASjC,GAAG,eAAZ,SAA4B4B,QChCnBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2a0451a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"TaskInput_form-control__255sW\",\"invalid\":\"TaskInput_invalid__2EBBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskItem\":\"TaskItem_taskItem__3IYEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"TaskList_taskList__xa2wk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3jR5X\"};","import { Fragment } from \"react\";\r\nimport classes from \"./TaskItem.module.css\";\r\n\r\nconst TaskItem = (props) => {\r\n  const deleteHandler = () => {\r\n    props.onDelete(props.id);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className={classes.taskItem} onClick={deleteHandler}>\r\n        {props.children}\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import { Fragment } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport classes from \"./TaskList.module.css\";\r\n\r\nconst TaskList = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <ul className={classes.taskList}>\r\n        {props.items.map((task) => (\r\n          <TaskItem key={task.id} id={task.id} onDelete={props.onDelete}>\r\n            {task.text}\r\n          </TaskItem>\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      type={props.type}\r\n      className={classes.button}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Fragment } from \"react\";\r\nimport { useState } from \"react\";\r\nimport classes from \"./TaskInput.module.css\";\r\nimport Button from \"./UI/Button\";\r\n\r\nconst TaskInput = (props) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const taskInputHandler = (event) => {\r\n    if (event.target.value.trim().length > 0) {\r\n      setIsValid(true);\r\n    }\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (enteredValue.trim().length === 0) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n    props.onAdd(enteredValue);\r\n    setEnteredValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={formSubmitHandler}>\r\n        <div\r\n          className={`${classes[\"form-control\"]} ${\r\n            !isValid && classes[\"invalid\"]\r\n          }`}\r\n        >\r\n          <label>Task</label>\r\n          <input type=\"text\" value={enteredValue} onChange={taskInputHandler} />\r\n        </div>\r\n        <Button type=\"submit\">Add Task</Button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskInput;\r\n","import \"./App.css\";\nimport { Fragment, useState } from \"react\";\nimport TaskList from \"./components/TaskList\";\nimport TaskInput from \"./components/TaskInput\";\n\nfunction App() {\n  //task list state, initial state is with 2 dummy tasks\n  const [taskList, setTaskList] = useState([\n    { id: \"t1\", text: \"Exercise\" },\n    { id: \"t2\", text: \"Send Email\" },\n  ]);\n\n  const addTaskHandler = (enteredText) => {\n    setTaskList((prevTaskList) => {\n      const updatedTaskList = [...prevTaskList];\n      updatedTaskList.unshift({\n        id: Math.random().toString(36).substr(2, 9),\n        text: enteredText,\n      });\n      return updatedTaskList;\n    });\n  };\n\n  const deleteTaskHandler = (targetId) => {\n    setTaskList((prevTaskList) => {\n      const updatedTaskList = prevTaskList.filter(\n        (task) => task.id !== targetId\n      );\n      return updatedTaskList;\n    });\n  };\n\n  //Content in task section\n  let content = <p>No tasks found.</p>;\n\n  if (taskList.length > 0) {\n    content = <TaskList items={taskList} onDelete={deleteTaskHandler} />;\n  }\n\n  return (\n    <Fragment>\n      <section id=\"form-section\">\n        <TaskInput onAdd={addTaskHandler} />\n      </section>\n      <section id=\"task-section\">{content}</section>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}